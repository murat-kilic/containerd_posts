// Code generated by protoc-gen-go. DO NOT EDIT.
// source: containerOps.proto

package api

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
//const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunRequest struct {
	ImageName            string   `protobuf:"bytes,1,opt,name=imageName,proto3" json:"imageName,omitempty"`
	ContainerName        string   `protobuf:"bytes,2,opt,name=containerName,proto3" json:"containerName,omitempty"`
	Cmd                  string   `protobuf:"bytes,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunRequest) Reset()         { *m = RunRequest{} }
func (m *RunRequest) String() string { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()    {}
func (*RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef4f7733f073593a, []int{0}
}

func (m *RunRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunRequest.Unmarshal(m, b)
}
func (m *RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunRequest.Marshal(b, m, deterministic)
}
func (m *RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunRequest.Merge(m, src)
}
func (m *RunRequest) XXX_Size() int {
	return xxx_messageInfo_RunRequest.Size(m)
}
func (m *RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunRequest proto.InternalMessageInfo

func (m *RunRequest) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *RunRequest) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *RunRequest) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type RunResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunResponse) Reset()         { *m = RunResponse{} }
func (m *RunResponse) String() string { return proto.CompactTextString(m) }
func (*RunResponse) ProtoMessage()    {}
func (*RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef4f7733f073593a, []int{1}
}

func (m *RunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunResponse.Unmarshal(m, b)
}
func (m *RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunResponse.Marshal(b, m, deterministic)
}
func (m *RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunResponse.Merge(m, src)
}
func (m *RunResponse) XXX_Size() int {
	return xxx_messageInfo_RunResponse.Size(m)
}
func (m *RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunResponse proto.InternalMessageInfo

func (m *RunResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*RunRequest)(nil), "test_plugin.RunRequest")
	proto.RegisterType((*RunResponse)(nil), "test_plugin.RunResponse")
}

func init() { proto.RegisterFile("containerOps.proto", fileDescriptor_ef4f7733f073593a) }

var fileDescriptor_ef4f7733f073593a = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0x59, 0x0b, 0x0b, 0x3b, 0x8b, 0x20, 0x23, 0x68, 0x11, 0x0f, 0xb2, 0x28, 0x78, 0x31,
	0x85, 0xf5, 0xa2, 0x78, 0xd3, 0xbb, 0x0b, 0xf1, 0xe6, 0x45, 0xd2, 0x74, 0xa8, 0x01, 0xf3, 0xc7,
	0x66, 0xe2, 0xe7, 0x97, 0xa6, 0xa5, 0xad, 0x78, 0x9b, 0x99, 0xf7, 0xf2, 0xde, 0x8f, 0x00, 0x6a,
	0xef, 0x58, 0x19, 0x47, 0xdd, 0x21, 0x44, 0x11, 0x3a, 0xcf, 0x1e, 0xb7, 0x4c, 0x91, 0x3f, 0xc2,
	0x57, 0x6a, 0x8d, 0xdb, 0xd5, 0x00, 0x32, 0x39, 0x49, 0xdf, 0x89, 0x22, 0xe3, 0x25, 0x6c, 0x8c,
	0x55, 0x2d, 0xbd, 0x2a, 0x4b, 0xe5, 0xea, 0x6a, 0x75, 0xbb, 0x91, 0xf3, 0x01, 0xaf, 0xe1, 0x78,
	0x8a, 0xcb, 0x8e, 0xa3, 0xec, 0xf8, 0x7b, 0xc4, 0x13, 0x28, 0xb4, 0x6d, 0xca, 0x22, 0x6b, 0xfd,
	0xb8, 0xbb, 0x81, 0x6d, 0xee, 0x88, 0xc1, 0xbb, 0x48, 0x78, 0x06, 0x6b, 0x9f, 0x38, 0x24, 0x1e,
	0x1b, 0xc6, 0x6d, 0x7f, 0x80, 0xd3, 0x97, 0x05, 0xed, 0x1b, 0x75, 0x3f, 0x46, 0x13, 0x3e, 0x40,
	0x21, 0x93, 0xc3, 0x73, 0xb1, 0xc0, 0x16, 0x33, 0xf3, 0x45, 0xf9, 0x5f, 0x18, 0x8a, 0x9e, 0x9f,
	0xde, 0x1f, 0x5b, 0xc3, 0x9f, 0xa9, 0x16, 0xda, 0xdb, 0x6a, 0xa2, 0x6c, 0x96, 0xe3, 0xf0, 0x2c,
	0x56, 0x7d, 0xc6, 0xdd, 0xb0, 0xec, 0x2b, 0x15, 0x4c, 0xbd, 0xce, 0x9f, 0x75, 0xff, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0xb2, 0x29, 0x85, 0x5b, 0x42, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContainerOpsServiceClient is the client API for ContainerOpsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContainerOpsServiceClient interface {
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
}

type containerOpsServiceClient struct {
	cc *grpc.ClientConn
}

func NewContainerOpsServiceClient(cc *grpc.ClientConn) ContainerOpsServiceClient {
	return &containerOpsServiceClient{cc}
}

func (c *containerOpsServiceClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/test_plugin.ContainerOpsService/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContainerOpsServiceServer is the server API for ContainerOpsService service.
type ContainerOpsServiceServer interface {
	Run(context.Context, *RunRequest) (*RunResponse, error)
}

// UnimplementedContainerOpsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContainerOpsServiceServer struct {
}

func (*UnimplementedContainerOpsServiceServer) Run(ctx context.Context, req *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterContainerOpsServiceServer(s *grpc.Server, srv ContainerOpsServiceServer) {
	s.RegisterService(&_ContainerOpsService_serviceDesc, srv)
}

func _ContainerOpsService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerOpsServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test_plugin.ContainerOpsService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerOpsServiceServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContainerOpsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test_plugin.ContainerOpsService",
	HandlerType: (*ContainerOpsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _ContainerOpsService_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "containerOps.proto",
}
